<?php
/*
* Dotgov Dashboard common functions module
*/

function dotgov_common_siteAsocScanids($websiteid){
    $node = node_load($websiteid);

    $query = db_query("select bundle,entity_id from field_data_field_website_id where field_website_id_nid=:nid", array(':nid' => $websiteid));
    foreach ($query as $result) {
        $websites[$result->bundle] = $result->entity_id;
    }
    return $websites;
}

/**
 * Get taxonomy terms associated to ().
 */
function dotgov_common_getNodeTaxonomy($nid)
{
    $terms = array();
    $results = db_query("SELECT  a.name as taxKey,a.tid as taxId, b.name as taxVoc FROM    taxonomy_term_data a, taxonomy_vocabulary b, taxonomy_index c WHERE   c.tid = a.tid AND     a.vid = b.vid AND     c.nid =:nid and b.name='website tags'", array(':nid' => $nid));
    foreach ($results as $result) {
        $terms[$result->taxId] = $result->taxKey;
    }
  return $terms;

}

/*
 * Find Last scan date
 */
function dotgov_common_lastScanDate(){
  $query = db_query("select nid,created from node where type='scans' order by nid desc limit 1");
  foreach ($query as $result) {
    $lastscantime = $result->created;
  }
  print date("m/d/Y",$lastscantime);
}

/*
* Hook Facet Alter
*/

function dotgov_common_facet_items_alter(&$build, &$settings) {
$enabled_fields =  array("sm_field_hsts_status","ism_field_https_status","sm_field_redirect","bm_field_ssl_v2_support","bm_field_ssl_v3_support","bm_field_tls_v1_support","bm_field_tls_v1_1_support","bm_field_tls_v1_2_support","bm_field_certificate_ocsp_stapli","bm_field_http_public_hpkp","bm_field_deflate_compression","bm_field_session_secure_renegoti","bm_field_have_proper_404","sm_field_enforce_https","bm_field_dap_status","bm_field_xss_protection");
$vulnerable_fields = array("bm_field_openssl_ccs_injection","bm_field_openssl_heartbleed","bm_field_downgrade_attacks");
                        if (in_array($settings->facet,$enabled_fields)) {
                          foreach($build as $key => $item) {
				if($key == 'true')	
                            		$build[$key]["#markup"] = "Enabled";
				elseif($key == 'false')	
                            		$build[$key]["#markup"] = "Disabled";
                          }
                        }
			if(in_array($settings->facet,$vulnerable_fields)) {
                          foreach($build as $key => $item) {
                                if($key == 'true')
                                        $build[$key]["#markup"] = "Vulnerable";
                                elseif($key == 'false')
                                        $build[$key]["#markup"] = "Not Vulnerable";
                          }
                        }


}

/*
 * Fast Function to get the technology tags associated to a node
 */

function dotgov_commmon_get_techTerms($nid){
    $terms = array();
    $results = db_query("SELECT  a.name as taxKey,a.tid as taxId, b.name as taxVoc FROM    taxonomy_term_data a, taxonomy_vocabulary b, taxonomy_index c WHERE   c.tid = a.tid AND     a.vid = b.vid AND     c.nid =:nid and b.name='technology'", array(':nid' => $nid));
    foreach ($results as $result) {
        $terms[$result->taxKey] = $result->taxVoc;
    }
    $techInfo = dotgov_common_loadJson($terms);
    return $techInfo;

}

/*
 * Get Apps Json Data
 */
function dotgov_common_loadJson($terms){
    $string = file_get_contents(drupal_get_path('module', 'dotgov_common')."/apps.json");
    $json_a = json_decode($string, true);

    $techstack = array();
    //print_r($terms);
    foreach($terms as $key=>$value){
        $version = '';
        if (strpos($key, "_") !== false) {
            $spstring = explode("_",$key);
            $key = $spstring[0];
            $version = $spstring[1];
        }
        $techstack[$key] = $json_a['apps'][$key];
        $cat = $json_a['apps'][$key]['cats'][0];
        $catg = $json_a['categories'][$cat];
        $techstack[$key]['category'] = $catg;
        if($version != '')
            $techstack[$key]['appversion'] = $version;
    }
    //print_r($techstack);
    return $techstack;
}

/**
 * Implements hook_block_info().
 */
function dotgov_common_block_info() {
    $blocks['technology_stack'] = array(
        // The name that will appear in the block list.
        'info' => t('Technology Information'),
        // Default setting.
        'cache' => DRUPAL_CACHE_PER_ROLE,
        'status' => TRUE,
        'region' => 'content'
    );
    return $blocks;
}
/*
 * Implements Hook Block view
 */
function dotgov_common_block_view($delta = '')
{
    switch ($delta) {
        case 'technology_stack':
            $block['subject'] = t('Technology Information');
            if (user_access('access content')) {
                // Retrieve and process data here.
                if(arg(1) != '') {
                    $websiteNodeid = arg(1);
                    $block['content'] = dotgov_commmon_getTechStackInfo($websiteNodeid);
                }
                else{
                    $block['content'] = "Sorry No Data to display";
                }
            }
    }
    return $block;
}

/*
 *
 * Get technology stack information for a single domain
 */
function dotgov_commmon_getTechStackInfo($nid){
    $techterms = dotgov_commmon_get_techTerms($nid);
    $output = "<div id='techstack'>";
    foreach($techterms as $techkey=>$techval) {
        $output .=  "<div id='techcategory' class='techcategory'>".$techval['category']['name']."</div>";
        $output .= "<a id='app-button' class='app-button'><img class='app-icon' src='/".drupal_get_path('module', 'dotgov_common')."/images/icons/".$techval['icon']."'>$techkey ".$techval['appversion']."</a>";
    }
    $output .= "</div>";

    return $output;
}