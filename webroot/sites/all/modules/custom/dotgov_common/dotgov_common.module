<?php
/*
* Dotgov Dashboard common functions module
*/

function dotgov_common_theme($existing, $type, $theme, $path) {
    return array(
        'govwide_reports_page' => array(
            'template' => 'dotgov-common-govwide-page',
            'variables' => array('nid' => NULL),
            'path' => drupal_get_path('module', 'dotgov_common') . '/templates',
        ),
        'govwide_graphs_page' => array(
            'template' => 'dotgov-common-govwide-graphspage',
            'variables' => array('nid' => NULL),
            'path' => drupal_get_path('module', 'dotgov_common') . '/templates',
        )
    );
}

function dotgov_common_siteAsocScanids($websiteid){
    $query = db_query("select bundle,entity_id from field_data_field_website_id where field_website_id_nid=:nid", array(':nid' => $websiteid));
    foreach ($query as $result) {
        $websites[$result->bundle] = $result->entity_id;
    }
    return $websites;
}

/**
 * Get taxonomy terms associated to ().
 */
function dotgov_common_getNodeTaxonomy($nid)
{
    $terms = array();
    $results = db_query("SELECT  a.name as taxKey,a.tid as taxId, b.name as taxVoc FROM    taxonomy_term_data a, taxonomy_vocabulary b, taxonomy_index c WHERE   c.tid = a.tid AND     a.vid = b.vid AND     c.nid =:nid and b.name='website tags'", array(':nid' => $nid));
    foreach ($results as $result) {
        $terms[$result->taxId] = $result->taxKey;
    }
  return $terms;

}

/*
 * Find Last scan date
 */
function dotgov_common_lastScanDate(){
  $query = db_query("select nid,created from node where type='scans' order by nid desc limit 1");
  foreach ($query as $result) {
    $lastscantime = $result->created;
  }
  print date("m/d/Y",$lastscantime);
}

/*
* Hook Facet Alter
*/

function dotgov_common_facet_items_alter(&$build, &$settings) {
$enabled_fields =  array("sm_field_hsts_status","ism_field_https_status","sm_field_redirect","bm_field_ssl_v2_support","bm_field_ssl_v3_support","bm_field_tls_v1_support","bm_field_tls_v1_1_support","bm_field_tls_v1_2_support","bm_field_certificate_ocsp_stapli","bm_field_http_public_hpkp","bm_field_deflate_compression","bm_field_session_secure_renegoti","bm_field_have_proper_404","sm_field_enforce_https","bm_field_dap_status","bm_field_xss_protection");
$vulnerable_fields = array("bm_field_openssl_ccs_injection","bm_field_openssl_heartbleed","bm_field_downgrade_attacks");
                        if (in_array($settings->facet,$enabled_fields)) {
                          foreach($build as $key => $item) {
				if($key == 'true')	
                            		$build[$key]["#markup"] = "Enabled";
				elseif($key == 'false')	
                            		$build[$key]["#markup"] = "Disabled";
                          }
                        }
			if(in_array($settings->facet,$vulnerable_fields)) {
                          foreach($build as $key => $item) {
                                if($key == 'true')
                                        $build[$key]["#markup"] = "Vulnerable";
                                elseif($key == 'false')
                                        $build[$key]["#markup"] = "Not Vulnerable";
                          }
                        }


}

/*
 * Fast Function to get the technology tags associated to a node
 */

function dotgov_commmon_get_techTerms($nid){
    $terms = array();
    $results = db_query("SELECT  a.name as taxKey,a.tid as taxId, b.name as taxVoc FROM    taxonomy_term_data a, taxonomy_vocabulary b, taxonomy_index c WHERE   c.tid = a.tid AND     a.vid = b.vid AND     c.nid =:nid and b.name='technology'", array(':nid' => $nid));
    foreach ($results as $result) {
        $terms[$result->taxKey] = $result->taxVoc;
    }
    $techInfo = dotgov_common_loadJson($terms);
    return $techInfo;

}

/*
 * Get Apps Json Data
 */
function dotgov_common_loadJson($terms){
    $string = file_get_contents(drupal_get_path('module', 'dotgov_common')."/apps.json");
    $json_a = json_decode($string, true);

    $techstack = array();
    //print_r($terms);
    foreach($terms as $key=>$value){
        $version = '';
        if (strpos($key, "_") !== false) {
            $spstring = explode("_",$key);
            $key = $spstring[0];
            $version = $spstring[1];
        }
        $techstack[$key] = $json_a['apps'][$key];
        $cat = $json_a['apps'][$key]['cats'][0];
        $catg = $json_a['categories'][$cat];
        $techstack[$key]['category'] = $catg;
        if($version != '')
            $techstack[$key]['appversion'] = $version;
    }
    //print_r($techstack);
    return $techstack;
}

/**
 * Implements hook_block_info().
 */
function dotgov_common_block_info() {
    $blocks['technology_stack'] = array(
        // The name that will appear in the block list.
        'info' => t('Technology Information'),
        'cache' => DRUPAL_NO_CACHE,
        'status' => FALSE
    );
    $blocks['govwide_tabular'] = array(
        // The name that will appear in the block list.
        'info' => t('Government-Wide Tabular Report'),
        'cache' => DRUPAL_NO_CACHE,
        'status' => FALSE
    );
    $blocks['govwide_graph'] = array(
        // The name that will appear in the block list.
        'info' => t('Government-Wide Chart'),
        'cache' => DRUPAL_NO_CACHE,
        'status' => FALSE
    );
    return $blocks;
}
/*
 * Implements Hook Block view
 */
function dotgov_common_block_view($delta = 0)
{
    $block = array();
    switch ($delta) {
        case 'technology_stack':
            $block['subject'] = t('Technology Information');
            if (user_access('access content')) {
                // Retrieve and process data here.
                if(arg(1) != '') {
                    $websiteNodeid = arg(1);
                    $block['content'] = dotgov_commmon_getTechStackInfo($websiteNodeid);
                }
                else{
                    $block['content'] = "Sorry No Data to display";
                }
            }
            break;

        case 'govwide_tabular':
            $block['subject'] = t('Government-Wide Tabular Report');
                // Retrieve and process data here.
                $govwidedata['actualdata'] = dotgov_common_govwideTrendData();
                $govwidedata['graph_title'] = "Government-Wide Tabular Report";
                $analysis_output =  theme('govwide_reports_page', array('govwidedata' => $govwidedata));
                $block = array(
                    'subject' => NULL,
                    'content' => $analysis_output,
                );
            break;

        case 'govwide_graph':
            $block['subject'] = t('Government-Wide Chart');
                // Retrieve and process data here.
                $govwidedata['actualdata'] = dotgov_common_govwideTrendData();
                $govwidedata['graph_title'] = "Government-Wide Chart";
                $analysis_output =  theme('govwide_graphs_page', array('govwidedata' => $govwidedata));
                $block = array(
                    'subject' => NULL,
                    'content' => $analysis_output,
                );
            break;
    }
    return $block;
}

/*
 *
 * Get technology stack information for a single domain
 */
function dotgov_commmon_getTechStackInfo($nid){
    $techterms = dotgov_commmon_get_techTerms($nid);
    $output = "<div id='techstack' class='row dataset-resources'>";
    if(count($techterms) != 0) {
        foreach ($techterms as $techkey => $techval) {
            $output .= "<div class='col-sm-12 nopadding dataset-resources'><span id='app-button' class='app-button'>" . $techval['category']['name'] . " :&nbsp;<img alt='app-icon' class='app-icon' src='/" . drupal_get_path('module', 'dotgov_common') . "/images/icons/" . $techval['icon'] . "'>$techkey " . $techval['appversion'] . "</span></div>";
        }
    }
    else
        $output .= '<div>No Technology Stack Information available.</div>';
    $output .= "</div>";

    return $output;
}
/*
 * Create Nice Looking Tooltip on any div or class. Just pass the id and type(class or id). This will genrate the dynamic css
 */
function dotgov_common_tooltip($id,$type){
    if($type == 'id')
        $cssid = "#".$id;
    elseif($type == 'class')
        $cssid = ".".$id;

    $dyncss = "<style>
$cssid {
    position: relative;
    display: inline-block;
}

$cssid .tooltiptext {
    visibility: hidden;
    position: absolute;
    background-color: #555;
    color: #fff;
    text-align: center;
    border-radius: 6px;
    z-index: 1;
    opacity: 0;
    transition: opacity 0.3s;
}

$cssid .tooltiptext::after {
    position: absolute;
    bottom: 100%;
    left: 50%;
    margin-left: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: #555 transparent transparent transparent;
}

$cssid:hover .tooltiptext {
    visibility: visible;
    opacity: 1;
}
$cssid .tooltip-left {
    top: -5px;
    bottom: auto;
    right: 128%;
}
</style>";
print $dyncss;
}

function dotgov_common_govwideTrendData(){
    //Find Number of published websites
    $curdate = date("Y-m-d");
    $websitenos = db_query("select count(*) from node a, field_data_field_agency_branch b where a.type='website' and a.status ='1' and a.nid=b.entity_id and  b.field_agency_branch_value='executive'")->fetchField();
    $agencynos = db_query("select count(*) from node a, field_data_field_agency_branch b where a.type='agency' and a.status ='1' and a.nid=b.entity_id and  b.field_agency_branch_value='executive'")->fetchField();
    $avg_https = round(db_query("select avg(a.field_https_score_value) as avg_value from field_data_field_https_score a , node b where a.entity_id=b.nid and b.type='website' and b.status='1'")->fetchField());
    $avg_dap = round(db_query("select avg(a.field_dap_score_value) as avg_value from field_data_field_dap_score a , node b where a.entity_id=b.nid and b.type='website' and b.status='1'")->fetchField());
    $avg_mob_overall = round(db_query("select avg(a.field_mobile_overall_score_value) as avg_value from field_data_field_mobile_overall_score a , node b where a.entity_id=b.nid and b.type='website' and b.status='1'")->fetchField());
    $avg_mob_perform = round(db_query("select avg(a.field_mobile_performance_score_value) as avg_value from field_data_field_mobile_performance_score a , node b where a.entity_id=b.nid and b.type='website' and b.status='1'")->fetchField());
    $avg_mob_usab = round(db_query("select avg(a.field_mobile_usability_score_value) as avg_value from field_data_field_mobile_usability_score a , node b where a.entity_id=b.nid and b.type='website' and b.status='1'")->fetchField());
    $avg_sitespeed = round(db_query("select avg(a.field_site_speed_score_value) as avg_value from field_data_field_site_speed_score a , node b where a.entity_id=b.nid and b.type='website' and b.status='1'")->fetchField());
    $avg_ipv6 = round(db_query("select avg(a.field_ipv6_score_value) as avg_value from field_data_field_ipv6_score a , node b where a.entity_id=b.nid and b.type='website' and b.status='1'")->fetchField());
    $avg_dnssec = round(db_query("select avg(a.field_dnssec_score_value) as avg_value from field_data_field_dnssec_score a , node b where a.entity_id=b.nid and b.type='website' and b.status='1'")->fetchField());
    $avg_rc4 = round(db_query("select avg(a.field_free_of_insecr_prot_score_value) as avg_value from field_data_field_free_of_insecr_prot_score a , node b where a.entity_id=b.nid and b.type='website' and b.status='1'")->fetchField());
    $avg_m15 = round(db_query("select avg(a.field_m15_13_compliance_score_value) as avg_value from field_data_field_m15_13_compliance_score a , node b where a.entity_id=b.nid and b.type='website' and b.status='1'")->fetchField());

    $govwidewebsite['websitenos'] = $websitenos;
    $govwidewebsite['agencynos'] = $agencynos;
    $govwidewebsite['avg_https'] = $avg_https;
    $govwidewebsite['avg_dap'] = $avg_dap;
    $govwidewebsite['avg_mob_overall'] = $avg_mob_overall;
    $govwidewebsite['avg_mob_perform'] = $avg_mob_perform;
    $govwidewebsite['avg_mob_usab'] = $avg_mob_usab;
    $govwidewebsite['avg_sitespeed'] = $avg_sitespeed;
    $govwidewebsite['avg_ipv6'] = $avg_ipv6;
    $govwidewebsite['avg_dnssec'] = $avg_dnssec;
    $govwidewebsite['avg_rc4'] = $avg_rc4;
    $govwidewebsite['avg_m15'] = $avg_m15;
    return $govwidewebsite;
}

