{"description":"<p>Options for the exporting module. For an overview on the matter, see\n<a href=\"https://www.highcharts.com/docs/export-module/export-module-overview\">the docs</a>.</p>\n","requires":["modules/exporting"],"typeList":{"names":["*"]},"children":[{"name":"accessibility","fullname":"exporting.accessibility","isLeaf":false,"typeMap":{"*":1},"typeList":{"names":["*"]},"description":"<p>Accessibility options for the exporting menu. Requires the\nAccessibility module.</p>\n","since":"7.1.0","requires":["modules/accessibility"],"filename":"js/Accessibility/Options/Options.js","line":799,"lineEnd":805,"version":"fa929aa027"},{"name":"allowHTML","fullname":"exporting.allowHTML","isLeaf":true,"default":"false","typeMap":{"boolean":1},"typeList":{"names":["boolean"]},"description":"<p>Experimental setting to allow HTML inside the chart (added through\nthe <code>useHTML</code> options), directly in the exported image. This allows\nyou to preserve complicated HTML structures like tables or bi-directional\ntext in exported charts.</p>\n<p>Disclaimer: The HTML is rendered in a <code>foreignObject</code> tag in the\ngenerated SVG. The official export server is based on PhantomJS,\nwhich supports this, but other SVG clients, like Batik, does not\nsupport it. This also applies to downloaded SVG that you want to\nopen in a desktop client.</p>\n","since":"4.1.8","filename":"js/Extensions/Exporting/ExportingDefaults.js","line":28,"lineEnd":44,"version":"fa929aa027"},{"name":"buttons","fullname":"exporting.buttons","isLeaf":false,"typeMap":{"Highcharts.Dictionary.<*>":1},"typeList":{"names":["Highcharts.Dictionary.<*>"]},"description":"<p>Options for the export related buttons, print and export. In addition\nto the default buttons listed here, custom buttons can be added.\nSee <a href=\"#navigation.buttonOptions\">navigation.buttonOptions</a> for general\noptions.</p>\n","requires":["modules/exporting"],"filename":"js/Extensions/Exporting/ExportingDefaults.js","line":229,"lineEnd":237,"version":"fa929aa027"},{"name":"chartOptions","fullname":"exporting.chartOptions","isLeaf":true,"typeMap":{"Highcharts.Options":1},"typeList":{"names":["Highcharts.Options"]},"description":"<p>Additional chart options to be merged into the chart before exporting to\nan image format. This does not apply to printing the chart via the export\nmenu.</p>\n<p>For example, a common use case is to add data labels to improve\nreadability of the exported chart, or to add a printer-friendly color\nscheme to exported PDFs.</p>\n","samples":[{"name":"Added data labels","value":"highcharts/exporting/chartoptions-data-labels/","products":["highcharts"]}],"filename":"js/Extensions/Exporting/ExportingDefaults.js","line":45,"lineEnd":61,"version":"fa929aa027"},{"name":"csv","fullname":"exporting.csv","isLeaf":false,"typeMap":{"*":1},"typeList":{"names":["*"]},"description":"<p>Options for exporting data to CSV or ExCel, or displaying the data\nin a HTML table or a JavaScript structure.</p>\n<p>This module adds data export options to the export menu and provides\nfunctions like <code>Chart.getCSV</code>, <code>Chart.getTable</code>, <code>Chart.getDataRows</code>\nand <code>Chart.viewData</code>.</p>\n<p>The XLS converter is limited and only creates a HTML string that is\npassed for download, which works but creates a warning before\nopening. The workaround for this is to use a third party XLSX\nconverter, as demonstrated in the sample below.</p>\n","since":"6.0.0","requires":["modules/export-data"],"samples":[{"name":"Categorized data","value":"highcharts/export-data/categorized/"},{"name":"Highcharts Stock time axis","value":"highcharts/export-data/stock-timeaxis/"},{"name":"Using a third party XLSX converter","value":"highcharts/export-data/xlsx/"}],"filename":"js/Extensions/ExportData.js","line":77,"lineEnd":88,"version":"fa929aa027"},{"name":"enabled","fullname":"exporting.enabled","isLeaf":true,"default":"true","typeMap":{"boolean":1},"typeList":{"names":["boolean"]},"description":"<p>Whether to enable the exporting module. Disabling the module will\nhide the context button, but API methods will still be available.</p>\n","since":"2.0.0","samples":[{"name":"Exporting module is loaded but disabled","value":"highcharts/exporting/enabled-false/","products":["highcharts"]}],"filename":"js/Extensions/Exporting/ExportingDefaults.js","line":62,"lineEnd":75,"version":"fa929aa027"},{"name":"error","fullname":"exporting.error","isLeaf":true,"typeMap":{"Highcharts.ExportingErrorCallbackFunction":1},"typeList":{"names":["Highcharts.ExportingErrorCallbackFunction"]},"description":"<p>Function to call if the offline-exporting module fails to export\na chart on the client side, and <a href=\"#exporting.fallbackToExportServer\">fallbackToExportServer</a> is disabled. If left undefined, an\nexception is thrown instead. Receives two parameters, the exporting\noptions, and the error from the module.</p>\n","since":"5.0.0","requires":["modules/exporting","modules/offline-exporting"],"see":["<p><a href=\"#exporting.fallbackToExportServer\">fallbackToExportServer</a></p>\n"],"filename":"js/Extensions/Exporting/ExportingDefaults.js","line":76,"lineEnd":90,"version":"fa929aa027"},{"name":"fallbackToExportServer","fullname":"exporting.fallbackToExportServer","isLeaf":true,"default":"true","typeMap":{"boolean":1},"typeList":{"names":["boolean"]},"description":"<p>Whether or not to fall back to the export server if the offline-exporting\nmodule is unable to export the chart on the client side. This happens for\ncertain browsers, and certain features (e.g.\n<a href=\"#exporting.allowHTML\">allowHTML</a>), depending on the image type exporting\nto. For very complex charts, it is possible that export can fail in\nbrowsers that don&#39;t support Blob objects, due to data URL length limits.\nIt is recommended to define the <a href=\"#exporting.error\">exporting.error</a>\nhandler if disabling fallback, in order to notify users in case export\nfails.</p>\n","since":"4.1.8","requires":["modules/exporting","modules/offline-exporting"],"filename":"js/Extensions/Exporting/ExportingDefaults.js","line":91,"lineEnd":108,"version":"fa929aa027"},{"name":"filename","fullname":"exporting.filename","isLeaf":true,"default":"chart","typeMap":{"string":1},"typeList":{"names":["string"]},"description":"<p>The filename, without extension, to use for the exported chart.</p>\n","since":"2.0.0","samples":[{"name":"Custom file name","value":"highcharts/exporting/filename/","products":["highcharts"]}],"filename":"js/Extensions/Exporting/ExportingDefaults.js","line":109,"lineEnd":121,"version":"fa929aa027"},{"name":"formAttributes","fullname":"exporting.formAttributes","isLeaf":true,"typeMap":{"Highcharts.HTMLAttributes":1},"typeList":{"names":["Highcharts.HTMLAttributes"]},"description":"<p>An object containing additional key value data for the POST form that\nsends the SVG to the export server. For example, a <code>target</code> can be set to\nmake sure the generated image is received in another frame, or a custom\n<code>enctype</code> or <code>encoding</code> can be set.</p>\n","since":"3.0.8","filename":"js/Extensions/Exporting/ExportingDefaults.js","line":122,"lineEnd":131,"version":"fa929aa027"},{"name":"libURL","fullname":"exporting.libURL","isLeaf":true,"default":"https://code.highcharts.com/{version}/lib","typeMap":{"string":1},"typeList":{"names":["string"]},"description":"<p>Path where Highcharts will look for export module dependencies to\nload on demand if they don&#39;t already exist on <code>window</code>. Should currently\npoint to location of <a href=\"https://github.com/canvg/canvg\">CanVG</a> library,\n<a href=\"https://github.com/yWorks/jsPDF\">jsPDF</a> and\n<a href=\"https://github.com/yWorks/svg2pdf.js\">svg2pdf.js</a>, required for client\nside export in certain browsers.</p>\n","since":"5.0.0","filename":"js/Extensions/Exporting/ExportingDefaults.js","line":132,"lineEnd":144,"version":"fa929aa027"},{"name":"menuItemDefinitions","fullname":"exporting.menuItemDefinitions","isLeaf":true,"default":"{\"viewFullscreen\": {}, \"printChart\": {}, \"separator\": {}, \"downloadPNG\": {}, \"downloadJPEG\": {}, \"downloadPDF\": {}, \"downloadSVG\": {}}","typeMap":{"Highcharts.Dictionary.<Highcharts.ExportingMenuObject>":1},"typeList":{"names":["Highcharts.Dictionary.<Highcharts.ExportingMenuObject>"]},"description":"<p>An object consisting of definitions for the menu items in the context\nmenu. Each key value pair has a <code>key</code> that is referenced in the\n<a href=\"#exporting.buttons.contextButton.menuItems\">menuItems</a> setting,\nand a <code>value</code>, which is an object with the following properties:</p>\n<ul>\n<li><p><strong>onclick:</strong> The click handler for the menu item</p>\n</li>\n<li><p><strong>text:</strong> The text for the menu item</p>\n</li>\n<li><p><strong>textKey:</strong> If internationalization is required, the key to a language\nstring</p>\n</li>\n</ul>\n<p>Custom text for the &quot;exitFullScreen&quot; can be set only in lang options\n(it is not a separate button).</p>\n","since":"5.0.13","samples":[{"name":"Menu item definitions","value":"highcharts/exporting/menuitemdefinitions/","products":["highcharts"]}],"filename":"js/Extensions/Exporting/ExportingDefaults.js","line":350,"lineEnd":377,"version":"fa929aa027"},{"name":"printMaxWidth","fullname":"exporting.printMaxWidth","isLeaf":true,"default":780,"typeMap":{"number":1},"typeList":{"names":["number"]},"description":"<p>When printing the chart from the menu item in the burger menu, if\nthe on-screen chart exceeds this width, it is resized. After printing\nor cancelled, it is restored. The default width makes the chart\nfit into typical paper format. Note that this does not affect the\nchart when printing the web page as a whole.</p>\n","since":"4.2.5","filename":"js/Extensions/Exporting/ExportingDefaults.js","line":200,"lineEnd":208,"version":"fa929aa027"},{"name":"scale","fullname":"exporting.scale","isLeaf":true,"default":2,"typeMap":{"number":1},"typeList":{"names":["number"]},"description":"<p>Defines the scale or zoom factor for the exported image compared\nto the on-screen display. While for instance a 600px wide chart\nmay look good on a website, it will look bad in print. The default\nscale of 2 makes this chart export to a 1200px PNG or JPG.</p>\n","since":"3.0.0","samples":[{"name":"Scale demonstrated","value":"highcharts/exporting/scale/","products":["highcharts"]}],"see":["<p><a href=\"#chart.width\">chart.width</a></p>\n","<p><a href=\"#exporting.sourceWidth\">exporting.sourceWidth</a></p>\n"],"filename":"js/Extensions/Exporting/ExportingDefaults.js","line":210,"lineEnd":227,"version":"fa929aa027"},{"name":"showTable","fullname":"exporting.showTable","isLeaf":true,"default":false,"typeMap":{"boolean":1},"typeList":{"names":["boolean"]},"description":"<p>Show a HTML table below the chart with the chart&#39;s current data.</p>\n","since":"6.0.0","requires":["modules/export-data"],"samples":[{"name":"Show the table","value":"highcharts/export-data/showtable/"},{"name":"Experiment with putting the table inside the subtitle to allow exporting it.","value":"highcharts/studies/exporting-table-html"}],"filename":"js/Extensions/ExportData.js","line":199,"lineEnd":210,"version":"fa929aa027"},{"name":"sourceHeight","fullname":"exporting.sourceHeight","isLeaf":true,"typeMap":{"number":1},"typeList":{"names":["number"]},"description":"<p>Analogous to <a href=\"#exporting.sourceWidth\">sourceWidth</a>.</p>\n","since":"3.0.0","filename":"js/Extensions/Exporting/ExportingDefaults.js","line":145,"lineEnd":151,"version":"fa929aa027"},{"name":"sourceWidth","fullname":"exporting.sourceWidth","isLeaf":true,"typeMap":{"number":1},"typeList":{"names":["number"]},"description":"<p>The width of the original chart when exported, unless an explicit\n<a href=\"#chart.width\">chart.width</a> is set, or a pixel width is set on the\ncontainer. The width exported raster image is then multiplied by\n<a href=\"#exporting.scale\">scale</a>.</p>\n","since":"3.0.0","samples":[{"name":"Source size demo","value":"highcharts/exporting/sourcewidth/","products":["highcharts"]}],"filename":"js/Extensions/Exporting/ExportingDefaults.js","line":152,"lineEnd":168,"version":"fa929aa027"},{"name":"tableCaption","fullname":"exporting.tableCaption","isLeaf":true,"typeMap":{"boolean":1,"string":1},"typeList":{"names":["boolean","string"]},"description":"<p>Caption for the data table. Same as chart title by default. Set to\n<code>false</code> to disable.</p>\n","since":"6.0.4","requires":["modules/export-data"],"samples":[{"name":"Multiple table headers","value":"highcharts/export-data/multilevel-table"}],"filename":"js/Extensions/ExportData.js","line":77,"lineEnd":88,"version":"fa929aa027"},{"name":"type","fullname":"exporting.type","isLeaf":true,"default":"image/png","typeMap":{"Highcharts.ExportingMimeTypeValue":1},"typeList":{"names":["Highcharts.ExportingMimeTypeValue"]},"description":"<p>Default MIME type for exporting if <code>chart.exportChart()</code> is called\nwithout specifying a <code>type</code> option. Possible values are <code>image/png</code>,\n <code>image/jpeg</code>, <code>application/pdf</code> and <code>image/svg+xml</code>.</p>\n","since":"2.0.0","filename":"js/Extensions/Exporting/ExportingDefaults.js","line":28,"lineEnd":44,"version":"fa929aa027"},{"name":"url","fullname":"exporting.url","isLeaf":true,"default":"https://export.highcharts.com/","typeMap":{"string":1},"typeList":{"names":["string"]},"description":"<p>The URL for the server module converting the SVG string to an image\nformat. By default this points to Highchart&#39;s free web service.</p>\n","since":"2.0.0","filename":"js/Extensions/Exporting/ExportingDefaults.js","line":193,"lineEnd":198,"version":"fa929aa027"},{"name":"useMultiLevelHeaders","fullname":"exporting.useMultiLevelHeaders","isLeaf":true,"default":true,"typeMap":{"boolean":1},"typeList":{"names":["boolean"]},"description":"<p>Use multi level headers in data table. If <a href=\"#exporting.csv.columnHeaderFormatter\">csv.columnHeaderFormatter</a> is defined, it has to return\nobjects in order for multi level headers to work.</p>\n","since":"6.0.4","requires":["modules/export-data"],"samples":[{"name":"Multiple table headers","value":"highcharts/export-data/multilevel-table"}],"filename":"js/Extensions/ExportData.js","line":212,"lineEnd":222,"version":"fa929aa027"},{"name":"useRowspanHeaders","fullname":"exporting.useRowspanHeaders","isLeaf":true,"default":true,"typeMap":{"boolean":1},"typeList":{"names":["boolean"]},"description":"<p>If using multi level table headers, use rowspans for headers that\nhave only one level.</p>\n","since":"6.0.4","requires":["modules/export-data"],"samples":[{"name":"Multiple table headers","value":"highcharts/export-data/multilevel-table"}],"filename":"js/Extensions/ExportData.js","line":224,"lineEnd":233,"version":"fa929aa027"},{"name":"width","fullname":"exporting.width","isLeaf":true,"typeMap":{"number":1},"typeList":{"names":["number"]},"description":"<p>The pixel width of charts exported to PNG or JPG. As of Highcharts\n3.0, the default pixel width is a function of the <a href=\"#chart.width\">chart.width</a> or <a href=\"#exporting.sourceWidth\">exporting.sourceWidth</a> and the\n<a href=\"#exporting.scale\">exporting.scale</a>.</p>\n","since":"2.0.0","samples":[{"name":"Export to 200px wide images","value":"highcharts/exporting/width/","products":["highcharts"]}],"filename":"js/Extensions/Exporting/ExportingDefaults.js","line":169,"lineEnd":183,"version":"fa929aa027"}]}