{"description":"<p>Styles for the label. The default <code>color</code> setting is\n<code>&quot;contrast&quot;</code>, which is a pseudo color that Highcharts picks up\nand applies the maximum contrast to the underlying point item,\nfor example the bar in a bar chart.</p>\n<p>The <code>textOutline</code> is a pseudo property that applies an outline of\nthe given width with the given color, which by default is the\nmaximum contrast to the text. So a bright text color will result\nin a black text outline for maximum readability on a mixed\nbackground. In some cases, especially with grayscale text, the\ntext outline doesn&#39;t work well, in which cases it can be disabled\nby setting it to <code>&quot;none&quot;</code>. When <code>useHTML</code> is true, the\n<code>textOutline</code> will not be picked up. In this, case, the same\neffect can be acheived through the <code>text-shadow</code> CSS property.</p>\n<p>For some series types, where each point has an extent, like for\nexample tree maps, the data label may overflow the point. There\nare two strategies for handling overflow. By default, the text\nwill wrap to multiple lines. The other strategy is to set\n<code>style.textOverflow</code> to <code>ellipsis</code>, which will keep the text on\none line plus it will break inside long words.</p>\n","samples":[{"name":"Long labels truncated with an ellipsis","value":"highcharts/plotoptions/pie-datalabels-overflow","products":["highcharts"]},{"name":"Long labels are wrapped","value":"highcharts/plotoptions/pie-datalabels-overflow-wrap","products":["highcharts"]}],"typeList":{"names":["*"]},"children":[{"name":"textOverflow","fullname":"plotOptions.sunburst.dataLabels.style.textOverflow","isLeaf":true,"default":"ellipsis","typeMap":{"string":1},"typeList":{"names":["string"]},"since":"4.1.0","filename":"js/Series/Sunburst/SunburstSeries.js","line":761,"lineEnd":761,"version":"fa929aa027"}]}