{"description":"<p>Options for the Boost module. The Boost module allows certain series types\nto be rendered by WebGL instead of the default SVG. This allows hundreds of\nthousands of data points to be rendered in milliseconds. In addition to the\nWebGL rendering it saves time by skipping processing and inspection of the\ndata wherever possible. This introduces some limitations to what features are\navailable in boost mode. See <a href=\"https://www.highcharts.com/docs/advanced-chart-features/boost-module\">the docs</a> for\ndetails.</p>\n<p>In addition to the global <code>boost</code> option, each series has a\n<a href=\"#plotOptions.series.boostThreshold\">boostThreshold</a> that defines when the\nboost should kick in.</p>\n<p>Requires the <code>modules/boost.js</code> module.</p>\n","requires":["modules/boost"],"samples":[{"name":"Line chart","value":"highcharts/boost/line"},{"name":"Line chart with hundreds of series","value":"highcharts/boost/line-series-heavy"},{"name":"Scatter chart","value":"highcharts/boost/scatter"},{"name":"Area chart","value":"highcharts/boost/area"},{"name":"Area range chart","value":"highcharts/boost/arearange"},{"name":"Column chart","value":"highcharts/boost/column"},{"name":"Column range chart","value":"highcharts/boost/columnrange"},{"name":"Bubble chart","value":"highcharts/boost/bubble"},{"name":"Heat map","value":"highcharts/boost/heatmap"},{"name":"Tree map","value":"highcharts/boost/treemap"}],"typeList":{"names":["*"]},"children":[{"name":"allowForce","fullname":"boost.allowForce","isLeaf":true,"default":"true","typeMap":{"boolean":1},"typeList":{"names":["boolean"]},"description":"<p>If set to true, the whole chart will be boosted if one of the series\ncrosses its threshold, and all the series can be boosted.</p>\n","filename":"js/Extensions/Boost/BoostOptions.js","line":202,"lineEnd":209,"version":"fa929aa027"},{"name":"debug","fullname":"boost.debug","isLeaf":false,"typeMap":{"*":1},"typeList":{"names":["*"]},"description":"<p>Debugging options for boost.\nUseful for benchmarking, and general timing.</p>\n","filename":"js/Extensions/Boost/BoostOptions.js","line":79,"lineEnd":84,"version":"fa929aa027"},{"name":"enabled","fullname":"boost.enabled","isLeaf":true,"default":"true","typeMap":{"boolean":1},"typeList":{"names":["boolean"]},"description":"<p>Enable or disable boost on a chart.</p>\n","filename":"js/Extensions/Boost/BoostOptions.js","line":72,"lineEnd":78,"version":"fa929aa027"},{"name":"seriesThreshold","fullname":"boost.seriesThreshold","isLeaf":true,"default":"null","typeMap":{"number":1,"null":1},"typeList":{"names":["number","null"]},"description":"<p>Set the series threshold for when the boost should kick in globally.</p>\n<p>Setting to e.g. 20 will cause the whole chart to enter boost mode\nif there are 20 or more series active. When the chart is in boost mode,\nevery series in it will be rendered to a common canvas. This offers\na significant speed improvment in charts with a very high\namount of series.</p>\n","filename":"js/Extensions/Boost/BoostOptions.js","line":59,"lineEnd":71,"version":"fa929aa027"},{"name":"useGPUTranslations","fullname":"boost.useGPUTranslations","isLeaf":true,"default":"false","typeMap":{"boolean":1},"typeList":{"names":["boolean"]},"description":"<p>Enable or disable GPU translations. GPU translations are faster than doing\nthe translation in JavaScript.</p>\n<p>This option may cause rendering issues with certain datasets.\nNamely, if your dataset has large numbers with small increments (such as\ntimestamps), it won&#39;t work correctly. This is due to floating point\nprecission.</p>\n","filename":"js/Extensions/Boost/BoostOptions.js","line":152,"lineEnd":164,"version":"fa929aa027"},{"name":"usePreallocated","fullname":"boost.usePreallocated","isLeaf":true,"default":"false","typeMap":{"boolean":1},"typeList":{"names":["boolean"]},"description":"<p>Enable or disable pre-allocation of vertex buffers.</p>\n<p>Enabling this will make it so that the binary data arrays required for\nstoring the series data will be allocated prior to transforming the data\nto a WebGL-compatible format.</p>\n<p>This saves a copy operation on the order of O(n) and so is significantly more\nperformant. However, this is currently an experimental option, and may cause\nvisual artifacts with some datasets.</p>\n<p>As such, care should be taken when using this setting to make sure that\nit doesn&#39;t cause any rendering glitches with the given use-case.</p>\n","filename":"js/Extensions/Boost/BoostOptions.js","line":165,"lineEnd":182,"version":"fa929aa027"}]}