{"description":"<p>The Data module provides a simplified interface for adding data to\na chart from sources like CVS, HTML tables or grid views. See also\nthe <a href=\"https://www.highcharts.com/docs/working-with-data/data-module\">tutorial article on the Data module</a>.</p>\n<p>It requires the <code>modules/data.js</code> file to be loaded.</p>\n<p>Please note that the default way of adding data in Highcharts, without\nthe need of a module, is through the <a href=\"#series.line.data\">series.<em>type</em>.data</a>\noption.</p>\n","requires":["modules/data"],"samples":[{"name":"HTML table","value":"highcharts/demo/column-parsed/","products":["highcharts"]},{"name":"CSV","value":"highcharts/data/csv/","products":["highcharts"]}],"typeList":{"names":["*"]},"children":[{"name":"beforeParse","fullname":"data.beforeParse","isLeaf":true,"typeMap":{"Highcharts.DataBeforeParseCallbackFunction":1},"typeList":{"names":["Highcharts.DataBeforeParseCallbackFunction"]},"description":"<p>A callback function to modify the CSV before parsing it. Return the modified\nstring.</p>\n","since":"6.1.0","samples":[{"name":"Modify CSV before parse","value":"highcharts/demo/line-ajax/","products":["highcharts"]}],"filename":"js/Extensions/Data.js","line":116,"lineEnd":126,"version":"fa929aa027"},{"name":"columns","fullname":"data.columns","isLeaf":true,"typeMap":{"array":"array.<highcharts.datavaluetype"},"typeList":{"names":["Array.<Array.<Highcharts.DataValueType>>"]},"description":"<p>A two-dimensional array representing the input data on tabular form.\nThis input can be used when the data is already parsed, for example\nfrom a grid view component. Each cell can be a string or number.\nIf not switchRowsAndColumns is set, the columns are interpreted as\nseries.</p>\n","since":"4.0.0","samples":[{"name":"Columns","value":"highcharts/data/columns/","products":["highcharts"]}],"see":["<p><a href=\"#data.rows\">data.rows</a></p>\n"],"filename":"js/Extensions/Data.js","line":127,"lineEnd":142,"version":"fa929aa027"},{"name":"columnsURL","fullname":"data.columnsURL","isLeaf":true,"typeMap":{"string":1},"typeList":{"names":["string"]},"description":"<p>A URL to a remote JSON dataset, structured as a column array.\nWill be fetched when the chart is created using Ajax.</p>\n","since":"4.0.0","samples":[{"name":"Columns with live polling","value":"highcharts/data/livedata-columns"}],"filename":"js/Extensions/Data.js","line":449,"lineEnd":458,"version":"fa929aa027"},{"name":"complete","fullname":"data.complete","isLeaf":true,"typeMap":{"Highcharts.DataCompleteCallbackFunction":1},"typeList":{"names":["Highcharts.DataCompleteCallbackFunction"]},"description":"<p>The callback that is evaluated when the data is finished loading,\noptionally from an external source, and parsed. The first argument\npassed is a finished chart options object, containing the series.\nThese options can be extended with additional options and passed\ndirectly to the chart constructor.</p>\n","since":"4.0.0","samples":[{"name":"Modify data on complete","value":"highcharts/data/complete/","products":["highcharts"]}],"see":["<p><a href=\"#data.parsed\">data.parsed</a></p>\n"],"filename":"js/Extensions/Data.js","line":143,"lineEnd":158,"version":"fa929aa027"},{"name":"csv","fullname":"data.csv","isLeaf":true,"typeMap":{"string":1},"typeList":{"names":["string"]},"description":"<p>A comma delimited string to be parsed. Related options are <a href=\"#data.startRow\">startRow</a>, <a href=\"#data.endRow\">endRow</a>, <a href=\"#data.startColumn\">startColumn</a>\nand <a href=\"#data.endColumn\">endColumn</a> to delimit what part of the table\nis used. The <a href=\"#data.lineDelimiter\">lineDelimiter</a> and <a href=\"#data.itemDelimiter\">itemDelimiter</a> options define the CSV delimiter formats.</p>\n<p>The built-in CSV parser doesn&#39;t support all flavours of CSV, so in\nsome cases it may be necessary to use an external CSV parser. See\n<a href=\"https://jsfiddle.net/highcharts/u59176h4/\">this example</a> of parsing\nCSV through the MIT licensed <a href=\"http://papaparse.com/\">Papa Parse</a>\nlibrary.</p>\n","since":"4.0.0","samples":[{"name":"Data from CSV","value":"highcharts/data/csv/","products":["highcharts"]}],"filename":"js/Extensions/Data.js","line":159,"lineEnd":178,"version":"fa929aa027"},{"name":"csvURL","fullname":"data.csvURL","isLeaf":true,"typeMap":{"string":1},"typeList":{"names":["string"]},"description":"<p>An URL to a remote CSV dataset. Will be fetched when the chart is created\nusing Ajax.</p>\n","since":"4.0.0","samples":[{"name":"Categorized bar chart with CSV and live polling","value":"highcharts/data/livedata-columns"},{"name":"Time based line chart with CSV and live polling","value":"highcharts/data/livedata-csv"}],"filename":"js/Extensions/Data.js","line":427,"lineEnd":438,"version":"fa929aa027"},{"name":"dataRefreshRate","fullname":"data.dataRefreshRate","isLeaf":true,"default":"1","typeMap":{"number":1},"typeList":{"names":["number"]},"description":"<p>Sets the refresh rate for data polling when importing remote dataset by\nsetting <a href=\"data.csvURL\">data.csvURL</a>, <a href=\"data.rowsURL\">data.rowsURL</a>,\n<a href=\"data.columnsURL\">data.columnsURL</a>, or\n<a href=\"data.googleSpreadsheetKey\">data.googleSpreadsheetKey</a>.</p>\n<p>Note that polling must be enabled by setting\n<a href=\"data.enablePolling\">data.enablePolling</a> to true.</p>\n<p>The value is the number of seconds between pollings.\nIt cannot be set to less than 1 second.</p>\n","since":"4.0.0","samples":[{"name":"Live data with user set refresh rate","value":"highcharts/demo/live-data"}],"filename":"js/Extensions/Data.js","line":459,"lineEnd":477,"version":"fa929aa027"},{"name":"dateFormat","fullname":"data.dateFormat","isLeaf":true,"typeMap":{"string":1},"typeList":{"names":["string"]},"description":"<p>Which of the predefined date formats in Date.prototype.dateFormats\nto use to parse date values. Defaults to a best guess based on what\nformat gives valid and ordered dates. Valid options include: <code>YYYY/mm/dd</code>,\n<code>dd/mm/YYYY</code>, <code>mm/dd/YYYY</code>, <code>dd/mm/YY</code>, <code>mm/dd/YY</code>.</p>\n","since":"4.0.0","samples":[{"name":"Best guess date format","value":"highcharts/data/dateformat-auto/","products":["highcharts"]}],"see":["<p><a href=\"#data.parseDate\">data.parseDate</a></p>\n"],"filename":"js/Extensions/Data.js","line":179,"lineEnd":195,"version":"fa929aa027"},{"name":"decimalPoint","fullname":"data.decimalPoint","isLeaf":true,"default":".","typeMap":{"string":1},"typeList":{"names":["string"]},"description":"<p>The decimal point used for parsing numbers in the CSV.</p>\n<p>If both this and data.delimiter is set to <code>undefined</code>, the parser will\nattempt to deduce the decimal point automatically.</p>\n","since":"4.1.0","samples":[{"name":"Comma as decimal point","value":"highcharts/data/delimiters/","products":["highcharts"]}],"filename":"js/Extensions/Data.js","line":196,"lineEnd":209,"version":"fa929aa027"},{"name":"enablePolling","fullname":"data.enablePolling","isLeaf":true,"default":"false","typeMap":{"boolean":1},"typeList":{"names":["boolean"]},"description":"<p>Enables automatic refetching of remote datasets every <em>n</em> seconds (defined by\nsetting <a href=\"data.dataRefreshRate\">data.dataRefreshRate</a>).</p>\n<p>Only works when either <a href=\"data.csvURL\">data.csvURL</a>,\n<a href=\"data.rowsURL\">data.rowsURL</a>, <a href=\"data.columnsURL\">data.columnsURL</a>, or\n<a href=\"data.googleSpreadsheetKey\">data.googleSpreadsheetKey</a>.</p>\n","since":"4.0.0","samples":[{"name":"Live data","value":"highcharts/demo/live-data"},{"name":"Categorized bar chart with CSV and live polling","value":"highcharts/data/livedata-columns"}],"filename":"js/Extensions/Data.js","line":478,"lineEnd":494,"version":"fa929aa027"},{"name":"endColumn","fullname":"data.endColumn","isLeaf":true,"typeMap":{"number":1},"typeList":{"names":["number"]},"description":"<p>In tabular input data, the last column (indexed by 0) to use. Defaults\nto the last column containing data.</p>\n","since":"4.0.0","samples":[{"name":"Limited data","value":"highcharts/data/start-end/","products":["highcharts"]}],"filename":"js/Extensions/Data.js","line":210,"lineEnd":220,"version":"fa929aa027"},{"name":"endRow","fullname":"data.endRow","isLeaf":true,"typeMap":{"number":1},"typeList":{"names":["number"]},"description":"<p>In tabular input data, the last row (indexed by 0) to use. Defaults\nto the last row containing data.</p>\n","since":"4.0.4","samples":[{"name":"Limited data","value":"highcharts/data/start-end/","products":["highcharts"]}],"filename":"js/Extensions/Data.js","line":221,"lineEnd":231,"version":"fa929aa027"},{"name":"firstRowAsNames","fullname":"data.firstRowAsNames","isLeaf":true,"default":"true","typeMap":{"boolean":1},"typeList":{"names":["boolean"]},"description":"<p>Whether to use the first row in the data set as series names.</p>\n","since":"4.1.0","samples":[{"name":"Don't get series names from the CSV","value":"highcharts/data/start-end/","products":["highcharts"]}],"filename":"js/Extensions/Data.js","line":232,"lineEnd":245,"version":"fa929aa027"},{"name":"googleAPIKey","fullname":"data.googleAPIKey","isLeaf":true,"typeMap":{"string":1},"typeList":{"names":["string"]},"description":"<p>The Google Spreadsheet API key required for access generated at <a href=\"https://console.cloud.google.com/apis/credentials\">API Services\n/ Credentials</a>. See a\ncomprehensive tutorial for setting up the key at the\n<a href=\"https://handsondataviz.org/google-sheets-api-key.html\">Hands-On Data Visualization</a>\nbook website.</p>\n","since":"9.2.2","samples":[{"name":"Load a Google Spreadsheet","value":"highcharts/data/google-spreadsheet/","products":["highcharts"]}],"filename":"js/Extensions/Data.js","line":246,"lineEnd":259,"version":"fa929aa027"},{"name":"googleSpreadsheetKey","fullname":"data.googleSpreadsheetKey","isLeaf":true,"typeMap":{"string":1},"typeList":{"names":["string"]},"description":"<p>The key or <code>spreadsheetId</code> value for a Google Spreadsheet to load. See\n<a href=\"https://developers.google.com/sheets/api/guides/concepts\">developers.google.com</a>\nfor how to find the <code>spreadsheetId</code>.</p>\n<p>In order for Google Sheets to load, a valid <a href=\"#data.googleAPIKey\">googleAPIKey</a>\nmust also be given.</p>\n","since":"4.0.0","samples":[{"name":"Load a Google Spreadsheet","value":"highcharts/data/google-spreadsheet/","products":["highcharts"]}],"filename":"js/Extensions/Data.js","line":260,"lineEnd":274,"version":"fa929aa027"},{"name":"googleSpreadsheetRange","fullname":"data.googleSpreadsheetRange","isLeaf":true,"typeMap":{"string":1,"undefined":1},"typeList":{"names":["string","undefined"]},"description":"<p>The Google Spreadsheet <code>range</code> to use in combination with\n<a href=\"#data.googleSpreadsheetKey\">googleSpreadsheetKey</a>. See\n<a href=\"https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.values/get\">developers.google.com</a>\nfor details.</p>\n<p>If given, it takes precedence over <code>startColumn</code>, <code>endColumn</code>, <code>startRow</code> and\n<code>endRow</code>.</p>\n","since":"9.2.2","samples":[{"name":"Load a Google Spreadsheet","value":"highcharts/data/google-spreadsheet/","products":["highcharts"]}],"filename":"js/Extensions/Data.js","line":275,"lineEnd":294,"version":"fa929aa027"},{"name":"googleSpreadsheetWorksheet","fullname":"data.googleSpreadsheetWorksheet","isLeaf":true,"typeMap":{"string":1},"typeList":{"names":["string"]},"description":"<p>No longer works since v9.2.2, that uses Google Sheets API v4. Instead, use\nthe <a href=\"#data.googleSpreadsheetRange\">googleSpreadsheetRange</a> option to load a\nspecific sheet.</p>\n","deprecated":true,"since":"4.0.0","filename":"js/Extensions/Data.js","line":295,"lineEnd":304,"version":"fa929aa027"},{"name":"itemDelimiter","fullname":"data.itemDelimiter","isLeaf":true,"typeMap":{"string":1},"typeList":{"names":["string"]},"description":"<p>Item or cell delimiter for parsing CSV. Defaults to the tab character\n<code>\\t</code> if a tab character is found in the CSV string, if not it defaults\nto <code>,</code>.</p>\n<p>If this is set to false or undefined, the parser will attempt to deduce\nthe delimiter automatically.</p>\n","since":"4.0.0","samples":[{"name":"Delimiters","value":"highcharts/data/delimiters/","products":["highcharts"]}],"filename":"js/Extensions/Data.js","line":305,"lineEnd":319,"version":"fa929aa027"},{"name":"lineDelimiter","fullname":"data.lineDelimiter","isLeaf":true,"default":"\\n","typeMap":{"string":1},"typeList":{"names":["string"]},"description":"<p>Line delimiter for parsing CSV.</p>\n","since":"4.0.0","samples":[{"name":"Delimiters","value":"highcharts/data/delimiters/","products":["highcharts"]}],"filename":"js/Extensions/Data.js","line":320,"lineEnd":330,"version":"fa929aa027"},{"name":"parsed","fullname":"data.parsed","isLeaf":true,"typeMap":{"Highcharts.DataParsedCallbackFunction":1},"typeList":{"names":["Highcharts.DataParsedCallbackFunction"]},"description":"<p>A callback function to access the parsed columns, the two-dimentional\ninput data array directly, before they are interpreted into series\ndata and categories. Return <code>false</code> to stop completion, or call\n<code>this.complete()</code> to continue async.</p>\n","since":"4.0.0","samples":[{"name":"Modify data after parse","value":"highcharts/data/parsed/","products":["highcharts"]}],"see":["<p><a href=\"#data.complete\">data.complete</a></p>\n"],"filename":"js/Extensions/Data.js","line":331,"lineEnd":345,"version":"fa929aa027"},{"name":"parseDate","fullname":"data.parseDate","isLeaf":true,"typeMap":{"Highcharts.DataParseDateCallbackFunction":1},"typeList":{"names":["Highcharts.DataParseDateCallbackFunction"]},"description":"<p>A callback function to parse string representations of dates into\nJavaScript timestamps. Should return an integer timestamp on success.</p>\n","since":"4.0.0","see":["<p><a href=\"#data.dateFormat\">dateFormat</a></p>\n"],"filename":"js/Extensions/Data.js","line":346,"lineEnd":355,"version":"fa929aa027"},{"name":"rows","fullname":"data.rows","isLeaf":true,"typeMap":{"array":"array.<highcharts.datavaluetype"},"typeList":{"names":["Array.<Array.<Highcharts.DataValueType>>"]},"description":"<p>The same as the columns input option, but defining rows intead of\ncolumns.</p>\n","since":"4.0.0","samples":[{"name":"Data in rows","value":"highcharts/data/rows/","products":["highcharts"]}],"see":["<p><a href=\"#data.columns\">data.columns</a></p>\n"],"filename":"js/Extensions/Data.js","line":356,"lineEnd":368,"version":"fa929aa027"},{"name":"rowsURL","fullname":"data.rowsURL","isLeaf":true,"typeMap":{"string":1},"typeList":{"names":["string"]},"description":"<p>A URL to a remote JSON dataset, structured as a row array.\nWill be fetched when the chart is created using Ajax.</p>\n","since":"4.0.0","samples":[{"name":"Rows with live polling","value":"highcharts/data/livedata-rows"}],"filename":"js/Extensions/Data.js","line":439,"lineEnd":448,"version":"fa929aa027"},{"name":"seriesMapping","fullname":"data.seriesMapping","isLeaf":true,"typeMap":{"array":"highcharts.dictionary.<number"},"typeList":{"names":["Array.<Highcharts.Dictionary.<number>>"]},"description":"<p>An array containing dictionaries for each series. A dictionary exists of\nPoint property names as the key and the CSV column index as the value.</p>\n","since":"4.0.4","samples":[{"name":"Label from data set","value":"highcharts/data/seriesmapping-label/","products":["highcharts"]}],"filename":"js/Extensions/Data.js","line":369,"lineEnd":379,"version":"fa929aa027"},{"name":"startColumn","fullname":"data.startColumn","isLeaf":true,"default":"0","typeMap":{"number":1},"typeList":{"names":["number"]},"description":"<p>In tabular input data, the first column (indexed by 0) to use.</p>\n","since":"4.0.0","samples":[{"name":"Limited data","value":"highcharts/data/start-end/","products":["highcharts"]}],"filename":"js/Extensions/Data.js","line":380,"lineEnd":390,"version":"fa929aa027"},{"name":"startRow","fullname":"data.startRow","isLeaf":true,"default":"0","typeMap":{"number":1},"typeList":{"names":["number"]},"description":"<p>In tabular input data, the first row (indexed by 0) to use.</p>\n","since":"4.0.0","samples":[{"name":"Limited data","value":"highcharts/data/start-end/","products":["highcharts"]}],"filename":"js/Extensions/Data.js","line":391,"lineEnd":401,"version":"fa929aa027"},{"name":"switchRowsAndColumns","fullname":"data.switchRowsAndColumns","isLeaf":true,"default":"false","typeMap":{"boolean":1},"typeList":{"names":["boolean"]},"description":"<p>Switch rows and columns of the input data, so that <code>this.columns</code>\neffectively becomes the rows of the data set, and the rows are interpreted\nas series.</p>\n","since":"4.0.0","samples":[{"name":"Switch rows and columns","value":"highcharts/data/switchrowsandcolumns/","products":["highcharts"]}],"filename":"js/Extensions/Data.js","line":402,"lineEnd":414,"version":"fa929aa027"},{"name":"table","fullname":"data.table","isLeaf":true,"typeMap":{"string":1,"global.HTMLElement":1},"typeList":{"names":["string","global.HTMLElement"]},"description":"<p>An HTML table or the id of such to be parsed as input data. Related\noptions are <code>startRow</code>, <code>endRow</code>, <code>startColumn</code> and <code>endColumn</code> to\ndelimit what part of the table is used.</p>\n","since":"4.0.0","samples":[{"name":"Parsed table","value":"highcharts/demo/column-parsed/","products":["highcharts"]}],"filename":"js/Extensions/Data.js","line":415,"lineEnd":426,"version":"fa929aa027"}]}